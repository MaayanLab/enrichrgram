I have a flask server that is running enrichment analysis and making a clustergram of the input genes and the enriched terms. I need to do the following: 

To Do 
	-. make virtual environment so that I can load it to one of the servers 
	-. clean up visualization
	-. add reorder capabilities by: pval, num of terms, etc

build 
	sudo docker build -t first_image .

remove old images 
	sudo docker rmi [imageid]


view images 
	sudo docker images
	(look for image id and place in the docker run id)

get into container
	sudo docker ps 
	(look for the container id)
	sudo docker exec -it 62a74a5ffad3 bash

start docker server 
	sudo docker run --rm -it -p 80:80 -v /home/nick/Documents/d3_clust_proj:/app 62a74a5ffad3 bash /app/boot.sh


remove containers and images 
	sudo docker ps -a | awk '{print $1}' | xargs sudo docker rm
	sudo docker images | awk '{print $3}' | xargs sudo docker rmi


--- old instructions to run on loretta
	
	I added in the code using a few ADD lines in the Dockerfile 

	
	# build image (happens quickly if things are cached)
	sudo docker build -t clustergram_flask .

	(no sudo required in mac)

	# push to dockerhub 
	sudo docker push maayanlab/clustergram_flask

	# ssh into loretta
	ssh root@10.91.53.62

	# pull from dockerhub 
	docker pull maayanlab/clustergram_flask:latest

	sudo docker run -it --rm -p 80:80 !!!image_id!!!-or-tag_name 

	within loretta
		docker run -it --rm -p 8087:80 maayanlab/clustergram_flask:latest

	accessing 
	locally 
			

	from outside 
		http://amp.pharm.mssm.edu/clustergram_flask


-- Docker instructions 

	Locally
		sudo docker build -t maayanlab/clustergram_flask:latest .

		sudo docker run -it --rm -p 80:80 maayanlab/clustergram_flask:latest

		sudo docker push maayanlab/clustergram_flask:latest

	Loretta

		docker pull maayanlab/clustergram_flask:latest

		# run an instance of it and remove it after its done running
		docker run -it --rm -p 8087:80 maayanlab/clustergram_flask:latest

		# run it in daemonized form 
		docker run -d -p 8087:80 maayanlab/clustergram_flask:latest

		# see docker containers
		docker ps -a

		# remove a docker container 
		docker rm [container id]

		# stop or start container 
		docker stop/start [container id]

		# access
		http://amp.pharm.mssm.edu/clustergram_flask


Temporary changes for local development 
	In order to be able to develop locally I'm going to temporarily remove the clustergram_flask path from the static files directory and from the post request. I also temporarily removed clustergram_flask from the post request path. 

	I need to figure out how to get the website url to be changed to a subdirectory called clustergram_flask in order to mimic the deployment that will be done on amp.pharm. - which will require greg to set up the correct re-routing (from 10.0... ip address on loretta). 

	Locally, I'll start the server by running run.py from d3_clust_proj/, the directory where the Dockerfile and boot.sh script is located. I don't think run.py is even needed. I'll test this by changing the name to tmp_run.py and see if I can still get a docker image to work locally. 

Mac specific docker notes 
	
	# start boot2docker 
	spotlight boot2docker and click the icon 

	# build 
	sudo docker build -t maayanlab/clustergram_flask:latest .

	# run
	docker run -it --rm -p 8087:80 clustergram_flask:latest


5-6-2015 
	I'm starting to work on this again. In the meantime I was working on Cardaic mutation data from Bruce stuff for kit, KEA2, kit etc. I want to use this visualization for multiple projects. It could be useful for KEA2, Nosology X2K, and Kit's project (which is similar to Nosology X2K). 

To Do Clustergram visualization
	6. set up modified highlighting scheme 
	3. add all gmts 
**5. add enrichment for multiple gmts at once

	0. only return/highlight significantly enriched 
	1. set up code so that it is only run if there are input genes (need to check if inputs are genes)
	2. set up example button to have an example list of genes 
	??. set up up/dn gene lists - this has some cool possibilities for coloring/opacity 
	??. find similar genes: show similar genes based on different attributes that can be selected from a multiple checkbox region 
	9. highlight transcription factors that are in the input list. 
	10. add pop-up instructions 
	3. reduce the width of the separating bars 

	-. add dynamically adjusting top column that will adjust to the length of the enriched terms 
	-. change scale functions to work with a variable number of enriched terms 
	-. rescale enrichment bar with zoom 
	-. initialize in cluster view 
	-. pass more information in request 

	Multiple GMT Enrichment at once
		This wouldn't be that difficult if I just leave the enrichment bar scaling the same for all gmt types. 

	Up/Dn Gene lists 
		I can highlight the input genes based on their being up/dn. I can also highlight the enriched terms based on how many of the intersecting genes are up/dn. 

	Find simiar genes/gene search
		This will function as half enrichr gene search, which gives the user access to all of the information from the gmts for a specific gene, and half lists2netowrks, which I believe fills in a gene list with similar genes. This would be a cool way for users to visually seethe information we have available. A user could for instance search for EGFR, find all the transcription factors that bind to the promoter region of EGFR and find other genes that are also bound by these transcription factor.


